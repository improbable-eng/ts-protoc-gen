/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_othercom_external_enum_pb = require('../../proto/othercom/external_enum_pb.js');
var proto_othercom_external_child_message_pb = require('../../proto/othercom/external_child_message_pb.js');
goog.exportSymbol('proto.examplecom.MapMessage', null, global);
goog.exportSymbol('proto.examplecom.MapMessage.InternalChildMessage', null, global);
goog.exportSymbol('proto.examplecom.MapMessage.InternalEnum', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.examplecom.MapMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.examplecom.MapMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.examplecom.MapMessage.displayName = 'proto.examplecom.MapMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.examplecom.MapMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.examplecom.MapMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.examplecom.MapMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.examplecom.MapMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    internalEnumsMap: (f = msg.getInternalEnumsMap()) ? f.toObject(includeInstance, undefined) : [],
    internalChildrenMap: (f = msg.getInternalChildrenMap()) ? f.toObject(includeInstance, proto.examplecom.MapMessage.InternalChildMessage.toObject) : [],
    externalEnumsMap: (f = msg.getExternalEnumsMap()) ? f.toObject(includeInstance, undefined) : [],
    externalChildrenMap: (f = msg.getExternalChildrenMap()) ? f.toObject(includeInstance, proto.othercom.ExternalChildMessage.toObject) : [],
    primitiveIntsMap: (f = msg.getPrimitiveIntsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.examplecom.MapMessage}
 */
proto.examplecom.MapMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.examplecom.MapMessage;
  return proto.examplecom.MapMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.examplecom.MapMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.examplecom.MapMessage}
 */
proto.examplecom.MapMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getInternalEnumsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readEnum);
         });
      break;
    case 2:
      var value = msg.getInternalChildrenMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.examplecom.MapMessage.InternalChildMessage.deserializeBinaryFromReader);
         });
      break;
    case 3:
      var value = msg.getExternalEnumsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readEnum);
         });
      break;
    case 4:
      var value = msg.getExternalChildrenMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.othercom.ExternalChildMessage.deserializeBinaryFromReader);
         });
      break;
    case 5:
      var value = msg.getPrimitiveIntsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.examplecom.MapMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.examplecom.MapMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.examplecom.MapMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.examplecom.MapMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInternalEnumsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getInternalChildrenMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.examplecom.MapMessage.InternalChildMessage.serializeBinaryToWriter);
  }
  f = message.getExternalEnumsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getExternalChildrenMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.othercom.ExternalChildMessage.serializeBinaryToWriter);
  }
  f = message.getPrimitiveIntsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * @enum {number}
 */
proto.examplecom.MapMessage.InternalEnum = {
  DEFAULT: 0,
  FIRST: 1,
  SECOND: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.examplecom.MapMessage.InternalChildMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.examplecom.MapMessage.InternalChildMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.examplecom.MapMessage.InternalChildMessage.displayName = 'proto.examplecom.MapMessage.InternalChildMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.examplecom.MapMessage.InternalChildMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.examplecom.MapMessage.InternalChildMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.examplecom.MapMessage.InternalChildMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.examplecom.MapMessage.InternalChildMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    myString: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.examplecom.MapMessage.InternalChildMessage}
 */
proto.examplecom.MapMessage.InternalChildMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.examplecom.MapMessage.InternalChildMessage;
  return proto.examplecom.MapMessage.InternalChildMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.examplecom.MapMessage.InternalChildMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.examplecom.MapMessage.InternalChildMessage}
 */
proto.examplecom.MapMessage.InternalChildMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMyString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.examplecom.MapMessage.InternalChildMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.examplecom.MapMessage.InternalChildMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.examplecom.MapMessage.InternalChildMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.examplecom.MapMessage.InternalChildMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMyString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string my_string = 1;
 * @return {string}
 */
proto.examplecom.MapMessage.InternalChildMessage.prototype.getMyString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.examplecom.MapMessage.InternalChildMessage.prototype.setMyString = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<int64, InternalEnum> internal_enums = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.examplecom.MapMessage.InternalEnum>}
 */
proto.examplecom.MapMessage.prototype.getInternalEnumsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.examplecom.MapMessage.InternalEnum>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


proto.examplecom.MapMessage.prototype.clearInternalEnumsMap = function() {
  this.getInternalEnumsMap().clear();
};


/**
 * map<string, InternalChildMessage> internal_children = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.examplecom.MapMessage.InternalChildMessage>}
 */
proto.examplecom.MapMessage.prototype.getInternalChildrenMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.examplecom.MapMessage.InternalChildMessage>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.examplecom.MapMessage.InternalChildMessage));
};


proto.examplecom.MapMessage.prototype.clearInternalChildrenMap = function() {
  this.getInternalChildrenMap().clear();
};


/**
 * map<int64, othercom.ExternalEnum> external_enums = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.othercom.ExternalEnum>}
 */
proto.examplecom.MapMessage.prototype.getExternalEnumsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.othercom.ExternalEnum>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.examplecom.MapMessage.prototype.clearExternalEnumsMap = function() {
  this.getExternalEnumsMap().clear();
};


/**
 * map<string, othercom.ExternalChildMessage> external_children = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.othercom.ExternalChildMessage>}
 */
proto.examplecom.MapMessage.prototype.getExternalChildrenMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.othercom.ExternalChildMessage>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.othercom.ExternalChildMessage));
};


proto.examplecom.MapMessage.prototype.clearExternalChildrenMap = function() {
  this.getExternalChildrenMap().clear();
};


/**
 * map<string, int64> primitive_ints = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.examplecom.MapMessage.prototype.getPrimitiveIntsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


proto.examplecom.MapMessage.prototype.clearPrimitiveIntsMap = function() {
  this.getPrimitiveIntsMap().clear();
};


goog.object.extend(exports, proto.examplecom);
